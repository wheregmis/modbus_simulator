// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.8.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api/modbus_server.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_NotifyPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotifyPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  Notify
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
          dynamic raw);

  @protected
  Notify dco_decode_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_u_16_u_16(dynamic raw);

  @protected
  (int, int) dco_decode_record_u_16_u_16(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  Notify
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
          SseDeserializer deserializer);

  @protected
  Notify sse_decode_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8(SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_u_16_u_16(
      SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_u_16_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_AnyhowException(
      AnyhowException raw) {
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_list_prim_u_8(Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_u_16_u_16> cst_encode_list_record_u_16_u_16(
      List<(int, int)> raw) {
    final ans = wire.cst_new_list_record_u_16_u_16(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_u_16_u_16(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  void cst_api_fill_to_wire_record_u_16_u_16(
      (int, int) apiObj, wire_cst_record_u_16_u_16 wireObj) {
    wireObj.field0 = cst_encode_u_16(apiObj.$1);
    wireObj.field1 = cst_encode_u_16(apiObj.$2);
  }

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
          Notify raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      Notify raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      Notify self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      Notify self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8(Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_16_u_16(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_16_u_16((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,
              ffi.Int32)>>('dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_input_registers(
    int port_,
  ) {
    return _wire_get_input_registers(
      port_,
    );
  }

  late final _wire_get_input_registersPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_get_input_registers');
  late final _wire_get_input_registers =
      _wire_get_input_registersPtr.asFunction<void Function(int)>();

  void wire_server_context(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> socket_addr,
    ffi.Pointer<ffi.Void> notify,
  ) {
    return _wire_server_context(
      port_,
      socket_addr,
      notify,
    );
  }

  late final _wire_server_contextPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>,
              ffi.Pointer<ffi.Void>)>>('wire_server_context');
  late final _wire_server_context = _wire_server_contextPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_cst_list_prim_u_8>, ffi.Pointer<ffi.Void>)>();

  void wire_get_notify(
    int port_,
  ) {
    return _wire_get_notify(
      port_,
    );
  }

  late final _wire_get_notifyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_get_notify');
  late final _wire_get_notify =
      _wire_get_notifyPtr.asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_stop_server() {
    return _wire_stop_server();
  }

  late final _wire_stop_serverPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'wire_stop_server');
  late final _wire_stop_server =
      _wire_stop_serverPtr.asFunction<WireSyncRust2DartDco Function()>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotifyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotifyPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotifyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotify =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockstdsyncArctokiosyncNotifyPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_list_prim_u_8> cst_new_list_prim_u_8(
    int len,
  ) {
    return _cst_new_list_prim_u_8(
      len,
    );
  }

  late final _cst_new_list_prim_u_8Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8> Function(
              ffi.Int32)>>('cst_new_list_prim_u_8');
  late final _cst_new_list_prim_u_8 = _cst_new_list_prim_u_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8> Function(int)>();

  ffi.Pointer<wire_cst_list_record_u_16_u_16> cst_new_list_record_u_16_u_16(
    int len,
  ) {
    return _cst_new_list_record_u_16_u_16(
      len,
    );
  }

  late final _cst_new_list_record_u_16_u_16Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_record_u_16_u_16> Function(
              ffi.Int32)>>('cst_new_list_record_u_16_u_16');
  late final _cst_new_list_record_u_16_u_16 = _cst_new_list_record_u_16_u_16Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_u_16_u_16> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class wire_cst_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_u_16_u_16 extends ffi.Struct {
  @ffi.Uint16()
  external int field0;

  @ffi.Uint16()
  external int field1;
}

final class wire_cst_list_record_u_16_u_16 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_u_16_u_16> ptr;

  @ffi.Int32()
  external int len;
}
